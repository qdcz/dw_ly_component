@use './common/config.scss' as *;

/*
 **    longText组件css样式
 */
@keyframes longTextScrollAnimation {
    0% {
        transform: translateX(0);
    }

    100% {
        transform: translateX(calc(-100% - var(--txt-gap)*1px));
    }
}

@keyframes longTextScrollAnimation3d {
    0% {
        transform: translate3d(0, 0, 0);
    }

    100% {
        transform: translate3d(calc(-100% - var(--txt-gap)*1px), 0, 0);
    }
}

.#{$namespace}-long-text {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    display: flex;

    &__scroll {
        overflow: auto;
        // text-align: center;
        width: 100%;

        // 使用css自带滚动动画
        & .startAnimation,
        span {
            //使用animation必须要变成块元素
            display: inline-block;
        }

        & .startAnimation {
            animation-name: var(--sco-ani-name);
            animation-duration: calc(var(--sco-ani-dura)*1s);
            animation-timing-function: linear;
            animation-iteration-count: infinite;
        }

        &:hover .startAnimation {
            animation-play-state: paused;
        }

        &::-webkit-scrollbar {
            display: none;
        }

        // 空白占位块
        & .seizeASeat {
            display: inline-block;
            width: calc(var(--txt-gap)*1px);
            height: 10px;
        }
    }
}


.#{$namespace}-roll-list {
    width: calc(var(--box-wid) * 1px);
    position: relative;

    &__pinSth {
        position: absolute;
        width: calc(var(--box-wid) * 1px);
        height: calc(var(--pin-hei) * 1px);
        bottom: calc(var(--pin-dire-b) * 1px);
        border-radius: calc(var(--pin-radius) * 1px);
    }

    &__th {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-around;
        background-color: var(--th-bg-color);
        color: var(--th-fo-color);
        padding: calc(var(--th-pad-tb)*1px) 0;
        font-size: calc(var(--th-fo-size)*1px);
        font-weight: var(--th-fo-weight);
        border-radius: calc(var(--th-radius-lt)*1px) calc(var(--th-radius-rt)*1px) calc(var(--th-radius-lb)*1px) calc(var(--th-radius-rb)*1px);
    }

    &__scroll {
        overflow-y: scroll;
        overflow-x: auto;

        &::-webkit-scrollbar {
            display: none;
        }
    }

    &__wrapper {
        list-style-type: none;
        width: inherit;
        margin: 0 !important;
        padding: 0 !important;

        & li {
            margin: 0 !important;
            padding: 0 !important;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;

            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;

            // &:nth-child(even) {
            //     background: #2d4b76;
            // }

            transition: 1s;

            &:hover {
                transition: background calc(var(--tr-hover-transition)*1s);
                background-color: var(--tr-hover-bg-color) !important;
                cursor: pointer;
            }
        }
    }

    &__td {
        margin: calc(var(--td-pad-tb)*1px) calc(var(--td-pad-lr)*1px);
        overflow: hidden;
        text-align: var(--td-txt-align);
        // flex: 1;
        flex-grow: 1;
        flex-basis: 0;
        transition: 1s;
    }
}